#!/bin/bash

################################################################################
#                                                                              #
#                                 {o,o}                                        #
#                                 |)__)                                        #
#                                 -"-"-                                        #
#                                                                              #
################################################################################
#
#The prebuild script.
#Main usage is to prepare project files for deployment.
#
##############################---VARIABLES---###################################

#Make bower not send statistics
export CI=true
REAL_USER_ID=$( id -u ${USER} )
PERSISTENT_LOCATIONS=( /opt/media /opt/kekec )
if [ -t 1 ]; then TTY_AVAILABLE="t"; else TTY_AVAILABLE=""; fi

################################################################################

##############################---FUNCTIONS---###################################

function runIntegration() {
    echo "Running packagers and fixing file permissions"
    docker run \
        --rm \
        -i${TTY_AVAILABLE} \
        -v $(pwd):/opt/web \
        -e CI=true \
        -w /opt/web  \
        kendu/projectbuilder:testing \
        bash -i -c "
if [ -e composer.json ]
then
echo ' > Running composer'
composer install
fi

if [ -e package.json ]
then
echo ' > Running npm'
npm install --no-bin-links
fi

if [ -e bower.json ]
then
echo ' > Running bower'
bower install --allow-root
fi

if [ -e gulpfile.js ]
then
echo ' > Running gulp'
gulp build
fi

if [ -e Gruntfile.js ]
then
    echo ' > Runing grunt'
    grunt
fi

echo ' > Fixing file permissions'
chown -R ${REAL_USER_ID}:${REAL_USER_ID} ."
for path in ${PERSISTENT_LOCATIONS[@]}
do
    chmod 777 $path
done

}

function createPersistentContainers() {
    #App container
    APP_PERSISTENT_CONTAINER="appPersistentData${1}"
    if [ -z "$(docker ps -a | grep ${APP_PERSISTENT_CONTAINER} )" ]
        then
        echo " > Creating app persistent container ${APP_PERSISTENT_CONTAINER}"
        docker run \
            -d \
            $(for path in ${PERSISTENT_LOCATIONS[@]}; do echo " -v $path "; done ) \
            --name "${APP_PERSISTENT_CONTAINER}" \
            kendu/laravelvar \
            true
    else
        echo " > Persistent app container: ${APP_PERSISTENT_CONTAINER} already exists "
    fi
    echo ""
}

################################################################################

###############################---EXECUTION---##################################

case ${BUILD_ENV} in
    "staging" | "production")
        createPersistentContainers "${BUILD_ENV^}${PROJECT_NAME^}"
        ;;

    *)
        createPersistentContainers "$( basename $( pwd ) )dev"
        ;;
esac

runIntegration

################################################################################
