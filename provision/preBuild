#!/bin/bash

################################################################################
#                                                                              #
#                                 {o,o}                                        #
#                                 |)__)                                        #
#                                 -"-"-                                        #
#                                                                              #
################################################################################
#
#The prebuild script.
#Main usage is to prepare project files for deployment.
#
##############################---VARIABLES---###################################

#Make bower not send statistics
export CI=true
REAL_USER_ID=$( id -u ${USER} )
PERSISTENT_LOCATIONS=( '/opt/media' )
LOCAL_LOCATIONS=( '/tmp/test' )
if [ -t 1 ]; then TTY_AVAILABLE="-it"; else TTY_AVAILABLE=""; fi

################################################################################

##############################---FUNCTIONS---###################################

function createLocalPaths() {
    echo "INFO: Creatieng local directory structure"
    for location in ${LOCAL_LOCATIONS[@]}
    do
        echo " > Creating directory $location"
        mkdir -p $location
    done
}

function runIntegration() {
    echo "INFO: Running packagers and fixing file permissions"
    docker run \
        --rm \
        ${TTY_AVAILABLE} \
        -v $(pwd):/opt/web \
        --volumes-from $APP_PERSISTENT_CONTAINER \
        -e CI=true \
        -w /opt/web  \
        kendu/projectbuilder \
        bash -i -c "
echo 'INFO: Creating required paths'
for p in ${PERSISTENT_LOCATIONS[@]}
do
    echo \" >> Fixing path \$p \"
    mkdir -p \$p
    chmod 777 \$p
done
if [ -e composer.json ]
then
echo 'INFO: Running composer'
composer install
fi

if [ -e package.json ]
then
echo 'INFO: Running npm'
npm install --no-bin-links
npm rebuild node-sass
fi

if [ -e bower.json ]
then
echo 'INFO: Running bower'
bower install --allow-root
fi

if [ -e Gruntfile.js ]
then
    echo 'INFO: Runing grunt'
    grunt
fi

if [ -e gulpfile.js ]
then
echo 'INFO: Running gulp'
gulp build
fi

echo 'INFO: Fixing file permissions'
chown -R ${REAL_USER_ID:-33} .
echo ' > Finished'
exit 0
"

}

function createPersistentContainers() {
    APP_PERSISTENT_CONTAINER="appPersistentData${1}"
    if [ -z "$(docker ps -a | grep ${APP_PERSISTENT_CONTAINER} )" ]
        then
        echo "INFO: Creating app persistent container ${APP_PERSISTENT_CONTAINER}"
        docker run \
            -d \
            $(for path in ${PERSISTENT_LOCATIONS[@]}; do echo " -v $path "; done ) \
            --name "${APP_PERSISTENT_CONTAINER}" \
            kendu/laravelvar \
            true
    else
        echo "INFO: Persistent app container: ${APP_PERSISTENT_CONTAINER} already exists "
    fi
    echo ""
}

################################################################################

###############################---EXECUTION---##################################

case ${BUILD_ENV} in
    "staging" | "production" | "beta" )
        createPersistentContainers "${BUILD_ENV^}${PROJECT_NAME^}"
        ;;

    *)
        createPersistentContainers "$( basename $( pwd ) )dev"
        ;;
esac

createLocalPaths
runIntegration

################################################################################
